{"ast":null,"code":"var _jsxFileName = \"/Users/joshi/Documents/GitHub/react-live-calc/src/components/MiningPower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Context } from '../components/Store';\nimport MiningCard from './MiningCard';\nimport PowerInput from './PowerInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: \"34px,\",\n    opacity: \"0.4\",\n    marginLeft: \"10px\",\n    marginTop: \" 25px\",\n    letterSpacing: \"2px\",\n    width: \"200px\",\n    border: \"1px solid #ff1e7c\",\n    outline: \" 0\",\n    fontSize: \"1rem\",\n    color: \"rgb(255, 255, 255)\",\n    padding: \" 3px 0\",\n    background: \"transparent\",\n    transition: \"border-color 0.2s\"\n  }\n};\n\nfunction MiningPower() {\n  _s();\n\n  const [state] = useContext(Context);\n  const [figures, setFigures] = useState({\n    aether: {\n      daily: 100,\n      weekly: 200,\n      monthly: 300\n    },\n    wax: {\n      daily: 400,\n      weekly: 500,\n      monthly: 600\n    },\n    usdt: {\n      daily: 700,\n      weekly: 800,\n      monthly: 900\n    }\n  });\n  const userInput = 200;\n\n  const handleInput = userInput => {\n    console.log(\"user input = \", userInput);\n    setFigures(calculateFigures(userInput));\n  };\n\n  const calculateFigures = userInput => {\n    const resultsObject = {\n      aether: {\n        daily: calcDaily(userInput),\n        weekly: calcWeekly(userInput),\n        monthly: calcMonthly(userInput)\n      }\n    };\n    console.log(state.waxRate);\n    resultsObject.wax = {\n      // Price of WAX * Daily Aether\n      daily: resultsObject.aether.daily * state.aetherRate,\n      weekly: resultsObject.aether.weekly * state.aetherRate,\n      monthly: resultsObject.aether.monthly * state.aetherRate\n    };\n    resultsObject.usdt = {\n      // Price of WAX * Daily Aether\n      daily: resultsObject.wax.daily * state.waxRate,\n      weekly: resultsObject.wax.weekly * state.waxRate,\n      monthly: resultsObject.wax.monthly * state.waxRate\n    };\n    return resultsObject;\n  };\n\n  const calcDaily = sum1 => {\n    const result = sum1 * 24;\n    return result;\n  };\n\n  const calcWeekly = sum1 => {\n    const result = sum1 * 168;\n    return result;\n  };\n\n  const calcMonthly = sum1 => {\n    const result = sum1 * 730;\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PowerInput, {\n      handleInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.container,\n      children: [/*#__PURE__*/_jsxDEV(MiningCard, {\n        name: \"Aether\",\n        color: \"red\",\n        imgSrc: \"assets/images/aether.png\",\n        userInput: userInput,\n        figures: figures.aether\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiningCard, {\n        name: \"Wax\",\n        color: \"orange\",\n        imgSrc: \"assets/images/wax.png\",\n        userInput: userInput,\n        figures: figures.wax\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiningCard, {\n        name: \"USDT\",\n        color: \"green\",\n        imgSrc: \"assets/images/usdt.png\",\n        userInput: userInput,\n        figures: figures.usdt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MiningPower, \"x0g92IsbQiehfMLPtTv1GEN19wM=\");\n\n_c = MiningPower;\nexport default MiningPower;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiningPower\");","map":{"version":3,"sources":["/Users/joshi/Documents/GitHub/react-live-calc/src/components/MiningPower.js"],"names":["React","useState","useContext","Context","MiningCard","PowerInput","style","container","display","justifyContent","input","height","opacity","marginLeft","marginTop","letterSpacing","width","border","outline","fontSize","color","padding","background","transition","MiningPower","state","figures","setFigures","aether","daily","weekly","monthly","wax","usdt","userInput","handleInput","console","log","calculateFigures","resultsObject","calcDaily","calcWeekly","calcMonthly","waxRate","aetherRate","sum1","result"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Context } from '../components/Store';\nimport MiningCard from './MiningCard'\nimport PowerInput from './PowerInput'\n\nconst style = {\n  container:{\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input:{\n    height: \"34px,\",\n    opacity: \"0.4\",\n    marginLeft: \"10px\",\n    marginTop:\" 25px\",\n    letterSpacing: \"2px\",\n    width: \"200px\",\n    border: \"1px solid #ff1e7c\",\n    outline:\" 0\",\n    fontSize: \"1rem\",\n    color: \"rgb(255, 255, 255)\",\n    padding:\" 3px 0\",\n    background: \"transparent\",\n    transition: \"border-color 0.2s\",\n  }\n}\nfunction MiningPower() {\n  const [ state ] = useContext(Context)\n  const [figures, setFigures] = useState({\n    aether:{\n      daily: 100,\n      weekly: 200,\n      monthly: 300\n    },\n    wax:{\n      daily: 400,\n      weekly: 500,\n      monthly: 600\n    },\n    usdt:{\n      daily: 700,\n      weekly: 800,\n      monthly: 900\n    },\n  })\n  const userInput = 200\n  const handleInput = (userInput) => {\n    console.log(\"user input = \", userInput) \n    setFigures(calculateFigures(userInput));\n  }\n\n  const calculateFigures = (userInput) => {\n    const resultsObject = {\n      aether: {\n        daily: calcDaily(userInput),\n        weekly: calcWeekly(userInput),\n        monthly: calcMonthly(userInput),\n      },\n    };\n    console.log(state.waxRate);\n\n    resultsObject.wax = {\n      // Price of WAX * Daily Aether\n      daily: resultsObject.aether.daily * state.aetherRate,\n      weekly: resultsObject.aether.weekly * state.aetherRate,\n      monthly: resultsObject.aether.monthly * state.aetherRate,\n    }\n    resultsObject.usdt = {\n      // Price of WAX * Daily Aether\n      daily: resultsObject.wax.daily * state.waxRate,\n      weekly: resultsObject.wax.weekly * state.waxRate,\n      monthly: resultsObject.wax.monthly * state.waxRate,\n    };\n  \n    return resultsObject;\n  };\n  const calcDaily = (sum1) => {\n    const result = sum1 * 24;\n    return result;\n  }\n  const calcWeekly = (sum1) => {\n    const result = sum1 * 168;\n    return result;\n  }\n  const calcMonthly = (sum1) => {\n    const result = sum1 * 730;\n    return result;\n  }\n\n  \n  return (\n    <div>\n      <PowerInput handleInput={handleInput} />\n      <div style={style.container}> \n        <MiningCard name={\"Aether\"} color={\"red\"} imgSrc={\"assets/images/aether.png\"} userInput={userInput} figures={figures.aether}  />\n        <MiningCard name={\"Wax\"} color={\"orange\"} imgSrc={\"assets/images/wax.png\"} userInput={userInput} figures={figures.wax} />\n        <MiningCard name={\"USDT\"} color={\"green\"} imgSrc={\"assets/images/usdt.png\"} userInput={userInput} figures={figures.usdt}  />\n      </div>\n    </div>\n  )\n}\n\nexport default MiningPower\n"]},"metadata":{},"sourceType":"module"}